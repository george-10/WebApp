// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  accounts     Account[]
  transactions Transaction[]
}

model Account {
  id        Int         @id @default(autoincrement())
  userId    Int
  name      String
  type      AccountType
  balance   Decimal     @default(0.00)
  createdAt DateTime    @default(now())

  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  categories   Category[]
}

model Transaction {
  id              Int             @id @default(autoincrement())
  accountId       Int
  userId          Int
  categoryId      Int
  amount          Decimal
  type            TransactionType
  description     String?
  transactionDate DateTime
  createdAt       DateTime        @default(now())

  account  Account  @relation(fields: [accountId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id        Int             @id @default(autoincrement())
  accountId Int
  name      String
  type      TransactionType
  createdAt DateTime        @default(now())

  account      Account       @relation(fields: [accountId], references: [id])
  transactions Transaction[]
}



enum AccountType {
  cash
  bank
  credit_card
  investment
}

enum TransactionType {
  income
  expense
}
